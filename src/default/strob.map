Archive member included because of file (symbol)

c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_mulhi3.o)
                              Strob.o (__mulhi3)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_exit.o)
                              c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr25/crttn2313.o (exit)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_copy_data.o)
                              Strob.o (__do_copy_data)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_clear_bss.o)
                              Strob.o (__do_clear_bss)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_ctors.o)
                              Strob.o (__do_global_ctors)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_tablejump.o)
                              c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_ctors.o) (__tablejump__)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr25/crttn2313.o
LOAD Strob.o
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr25\libm.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr25\libc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x81e
 *(.vectors)
 .vectors       0x00000000       0x26 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr25/crttn2313.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
 .ctors         0x00000026        0x2 Strob.o
                0x00000028                __ctors_end = .
                0x00000028                __dtors_start = .
 *(.dtors)
                0x00000028                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000028        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr25/crttn2313.o
                0x00000028                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000028        0x8 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr25/crttn2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000030       0x16 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_copy_data.o)
                0x00000030                __do_copy_data
 .init4         0x00000046       0x10 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_clear_bss.o)
                0x00000046                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 .init6         0x00000056       0x14 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_ctors.o)
                0x00000056                __do_global_ctors
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000006a        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr25/crttn2313.o
 *(.init9)
 *(.text)
 .text          0x0000006e        0x2 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr25/crttn2313.o
                0x0000006e                __vector_1
                0x0000006e                __vector_12
                0x0000006e                __bad_interrupt
                0x0000006e                __vector_6
                0x0000006e                __vector_3
                0x0000006e                __vector_11
                0x0000006e                __vector_13
                0x0000006e                __vector_17
                0x0000006e                __vector_7
                0x0000006e                __vector_4
                0x0000006e                __vector_9
                0x0000006e                __vector_2
                0x0000006e                __vector_15
                0x0000006e                __vector_8
                0x0000006e                __vector_14
                0x0000006e                __vector_10
                0x0000006e                __vector_16
                0x0000006e                __vector_18
 .text          0x00000070      0x77a Strob.o
                0x00000070                AvrExit::tugleExit(char, char)
                0x000000a6                TuggleAlgorithm::setAlg(Tugling*, char)
                0x000000f4                TuggleAlgorithm::TuggleAlgorithm(Tugling*, char)
                0x000000f8                TuggleAlgorithm::getNext()
                0x00000144                Exit::isLastTick()
                0x0000017c                ExitDisp::ExitDisp(ProcExit*)
                0x000001a6                ExitDisp::firstCheckExits()
                0x00000234                ExitDisp::checkExits()
                0x000002d6                checkUserCommand()
                0x00000358                SetupTIMER1()
                0x0000036e                __vector_5
                0x000003a2                main
 .text          0x000007ea        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_mulhi3.o)
 .text          0x000007ea        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_exit.o)
 .text          0x000007ea        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_copy_data.o)
 .text          0x000007ea        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_clear_bss.o)
 .text          0x000007ea        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_ctors.o)
 .text          0x000007ea        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_tablejump.o)
                0x000007ea                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000007ea       0x24 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_mulhi3.o)
                0x000007ea                __mulhi3
 .text.libgcc   0x0000080e        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_exit.o)
 .text.libgcc   0x0000080e        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_copy_data.o)
 .text.libgcc   0x0000080e        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000080e        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_ctors.o)
 .text.libgcc   0x0000080e        0xc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_tablejump.o)
                0x0000080e                __tablejump2__
                0x00000812                __tablejump__
                0x0000081a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000081a        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_exit.o)
                0x0000081a                _exit
                0x0000081a                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000081a        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_exit.o)
 *(.fini0)
                0x0000081e                _etext = .

.data           0x00800060       0x2c load address 0x0000081e
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr25/crttn2313.o
 .data          0x00800060       0x2c Strob.o
                0x00800060                alwayson
                0x00800063                alwaysoff
                0x00800066                blink_70_70
                0x0080006c                blink_20_50_50_20
                0x00800078                blink_20_20_20_60
                0x00800084                strob_pos
                0x00800085                vtable for AvrExit
                0x0080008b                checkUserCommand()::blink_was_released
 .data          0x0080008c        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_mulhi3.o)
 .data          0x0080008c        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_exit.o)
 .data          0x0080008c        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_copy_data.o)
 .data          0x0080008c        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_clear_bss.o)
 .data          0x0080008c        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_ctors.o)
 .data          0x0080008c        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_tablejump.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080008c                . = ALIGN (0x2)
                0x0080008c                _edata = .
                0x0080008c                PROVIDE (__data_end, .)

.bss            0x0080008c       0x4b
                0x0080008c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080008c        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr25/crttn2313.o
 .bss           0x0080008c       0x4b Strob.o
                0x0080008c                checkflag
                0x0080008d                checkUserCommand()::blibk_wait_start
                0x0080008e                checkUserCommand()::blibk_wait_count
                0x0080008f                checkUserCommand()::blink_count
                0x00800090                checkUserCommand()::is_strob
 .bss           0x008000d7        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_mulhi3.o)
 .bss           0x008000d7        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_exit.o)
 .bss           0x008000d7        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_copy_data.o)
 .bss           0x008000d7        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_clear_bss.o)
 .bss           0x008000d7        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_ctors.o)
 .bss           0x008000d7        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr25\libgcc.a(_tablejump.o)
 *(.bss*)
 *(COMMON)
                0x008000d7                PROVIDE (__bss_end, .)
                0x0000081e                __data_load_start = LOADADDR (.data)
                0x0000084a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000d7        0x0
                0x008000d7                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000d7                PROVIDE (__noinit_end, .)
                0x008000d7                _end = .
                0x008000d7                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6b4
 *(.stab)
 .stab          0x00000000      0x6b4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr25/crttn2313.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr25/crttn2313.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 Strob.o

.debug_pubnames
                0x00000000      0x1f8
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x1f8 Strob.o

.debug_info     0x00000000      0xddd
 *(.debug_info)
 .debug_info    0x00000000      0xddd Strob.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x406
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x406 Strob.o

.debug_line     0x00000000      0x5b7
 *(.debug_line)
 .debug_line    0x00000000      0x5b7 Strob.o

.debug_frame    0x00000000       0xe0
 *(.debug_frame)
 .debug_frame   0x00000000       0xe0 Strob.o

.debug_str      0x00000000      0x698
 *(.debug_str)
 .debug_str     0x00000000      0x698 Strob.o
                                0x750 (size before relaxing)

.debug_loc      0x00000000      0x2f9
 *(.debug_loc)
 .debug_loc     0x00000000      0x2f9 Strob.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(strob.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0x73
 .debug_pubtypes
                0x00000000       0x73 Strob.o

.debug_ranges   0x00000000       0x90
 .debug_ranges  0x00000000       0x90 Strob.o
